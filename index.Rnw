ascii
=====
David Hajage <dhajage[at]gmail[dot]com>

http://eusebe.github.com/ascii[ascii] is a R package for writing asciidoc, txt2tags, sphinx or org documents with embeded R commands.

news
----

include::NEWS[]

short example
-------------

  <<>>=
  x <- matrix(1:4, 2, 2)
  x
  @

gives :

<<simplematrix1>>=
x <- matrix(1:4, 2, 2)
x
@

  <<results=ascii,echo=FALSE>>=
  ascii(x, caption = "A simple matrix", width = 30)
  @

gives :

<<simplematrix2,results=ascii,echo=FALSE>>=
ascii(x, caption = "A simple matrix", width = 30)
@

what ascii provides
-------------------

ascii provided :

* a generic method for common R objects: +ascii()+. Default argument depends of R object,
* several Sweave drivers: +Sweave("yourfile.Rnw", RweaveAsciidoc())+, +Sweave("yourfile.Rnw", RweaveT2t())+, +Sweave("yourfile.Rnw", RweaveSphinx())+ and +Sweave("yourfile.Rnw", RweaveOrg())+. 
* some simple wrappers for +Sweave()+ named +Asciidoc()+, +T2t()+, +Sphinx()+ and +Org()+.

features/options
----------------

See +?ascii+ for the description of all arguments.

[options='header', frame = 'topbot', grid = 'none']
|======================================================
|                  | asciidoc | txt2tags | sphinx | org
| *Arguments*      |          |          |        | 
| include.rownames | yes      | yes      | yes    | yes
| include.colnames | yes      | yes      | yes    | yes
| rownames         | yes      | yes      | yes    | yes
| colnames         | yes      | yes      | yes    | yes
| format           | yes      | yes      | yes    | yes
| digits           | yes      | yes      | yes    | yes
| decimal.mark     | yes      | yes      | yes    | yes
| na.print         | yes      | yes      | yes    | yes
| caption          | yes      | yes      | yes    | yes
| caption.level    | yes      | yes      | yes    | yes
| width            | yes      | no       | no     | no
| frame            | yes      | yes (all or none) | no   | no
| grid             | yes      | no       | no     | no
| valign           | yes      | no       | no     | no
| header           | yes      | yes      | yes    | yes
| footer           | yes      | yes      | no     | no
| align            | yes      | yes      | no     | no
| col.width        | yes      | no       | no     | no
| style            | yes      | yes      | yes    | yes
| cgroup           | yes      | yes      | yes    | no
| n.cgroup         | yes      | yes      | yes    | no
| calign           | yes      | yes      | no     | no
| cvalign          | yes      | no       | no     | no
| cstyle           | yes      | yes      | yes    | no
| rgroup           | yes      | no       | yes    | no
| n.rgroup         | yes      | no       | yes    | no
| ralign           | yes      | no       | no     | no
| rvalign          | yes      | no       | no     | no
| rstyle           | yes      | no       | yes    | no
| list.type        | yes      | yes      | yes    | yes
| condense         | yes      | yes      | yes    | yes
| *Output*         |          |          |        |
| html             | yes      | yes      | yes    | yes
| docbook          | yes      | yes      | no     | yes
| latex            | yes (experimental) | yes | yes (col and row spans not implemented yet) | yes
| *Feature*        |          |          |        |
| syntax color     | yes (but not for R...) | no | yes | yes
|====================================================================

ascii examples
-------------

ascii provides methods for:

<<methods>>=
methods(ascii)
@

vector
~~~~~~

<<vector>>=
ascii(1:4)
@

<<vector2,echo=FALSE,results=ascii>>=
ascii(1:4)
@

matrix
~~~~~~

<<matrix>>=
ascii(VADeaths, include.rownames = T, include.colnames = T, caption = "VADeaths", header = T, col.width = c(1, 2, 2, 2, 2, 2), valign = "middle", align = "lrrrr", frame = "topbot")
@

<<matrix2,echo=FALSE,results=ascii>>=
ascii(VADeaths, include.rownames = T, include.colnames = T, caption = "VADeaths", header = T, col.width = c(1, 2, 2, 2, 2, 2), valign = "middle", align = "lrrrr", frame = "topbot")
@

data.frame
~~~~~~~~~~

<<dataframe>>=
ascii(iris[1:10,], include.rownames = F, caption = "iris", width = 75, align = "c", valign = "bottom", frame = "topbot", grid = "none")
@

<<dataframe2,echo=FALSE,results=ascii>>=
ascii(iris[1:10,], include.rownames = F, caption = "iris", width = 75, align = "c", valign = "bottom", frame = "topbot", grid = "none")
@

row (and col) headings
~~~~~~~~~~~~~~~~~~~~~~

<<rowheads>>=
library(reshape)
ff_d <- melt(french_fries, id=1:4, na.rm=TRUE)
toto <- cast(ff_d, treatment + subject ~ variable, mean, margins="treatment")
ascii(toto[, -1], rgroup = c("Treatment", paste("Treatment:", as.character(unique(toto[, 1])))), n.rgroup = c(1, table(toto[, 1])), rstyle = "s", rvalign = "middle")
@ 

<<rowheads2,echo=FALSE,results=ascii>>=
library(reshape)
ff_d <- melt(french_fries, id=1:4, na.rm=TRUE)
toto <- cast(ff_d, treatment + subject ~ variable, mean, margins="treatment")
ascii(toto[, -1], rgroup = c("Treatment", paste("Treatment:", as.character(unique(toto[, 1])))), n.rgroup = c(1, table(toto[, 1])), rstyle = "s", rvalign = "middle")
@ 

summary.table
~~~~~~~~~~~~~

<<summaryTable>>=
ascii(summary(table(1:4, 1:4)))
@

<<summaryTable2,echo=FALSE,results=ascii>>=
ascii(summary(table(1:4, 1:4)))
@

labeled list
~~~~~~~~~~~~

<<labeledlist>>=
ascii(version)
@

<<summaryTable2,echo=FALSE,results=ascii>>=
ascii(version)
@

glm
~~~

<<glm>>=
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
d.AD <- data.frame(treatment, outcome, counts)
glm.D93 <- glm(counts ~ outcome + treatment, family=poisson())
glm.D93
ascii(glm.D93, caption = "glm.D93")
ascii(anova(glm.D93), caption = "anova glm.D93", include.rownames = T)
@

<<glm2,echo=FALSE,results=ascii>>=
ascii(glm.D93, caption = "glm.D93")
ascii(anova(glm.D93), caption = "anova glm.D93", include.rownames = T)
@

describe
~~~~~~~~

<<describe>>=
library(Hmisc)
label(esoph$agegp) <- "Age group"
label(esoph$alcgp) <- "Alcohol group"
label(esoph$tobgp) <- "Tobacco group"
label(esoph$ncontrols) <- "Number of control"
label(esoph$age) <- "Age"
units(esoph$age) <- "Years"

ascii(describe(esoph))
@

<<describe,echo=FALSE,results=ascii>>=
library(Hmisc)
ascii(describe(esoph))
@

plot
~~~~

<<ggplot2, fig=TRUE>>=
library(ggplot2)
p <- qplot(price, ..density.., data = diamonds, geom = "freqpoly", binwidth = 1000, colour = color)
print(p)
@

other outputs
~~~~~~~~~~~~~

<<other>>=
library(reshape)
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id = c("month", "day"), na.rm = TRUE)
res <- cast(aqm, month ~ variable, mean, margins= "grand_row")
res
print(ascii(res), "t2t")
print(ascii(res), "sphinx")
print(ascii(res), "org")
@


convert
-------

+Sweave+ process creates a +yourdocument.xxx+ file from +yourdocument.Rnw+.

----
Sweave("youdocument.Rnw", RweaveXxx)
----

You can convert it to html format with the following command:

----
asciidoc yourdocument.txt
or
txt2tags -t html yourdocument.t2t
or
sphinx-build -b html . youdocument # need a conf.py file
or
Alt-X org-export-as-html
----

or to other formats...

For example, you can see the source of http://eusebe.github.com/ascii/index.Rnw[this documentation], the file http://eusebe.github.com/ascii/index.txt[generated by +Sweave+], the same file in http://eusebe.github.com/ascii/index.xml[docbook format], the same file http://eusebe.github.com/ascii/index.pdf[converted to pdf] with dblatex, and the same file http://eusebe.github.com/ascii/index.odt[converted to odt] with docbook2odf.

more informations
-----------------

- asciidoc: http://www.methods.co.nz/asciidoc
- txt2tags: http://txt2tags.sourceforge.net
- sphinx: http://sphinx.pocoo.org/
- org-mode: http://orgmode.org/
  
ascii for real
--------------

- Derek H. Ogle has written http://www.ncfaculty.net/dogle/fishR/bookex/AIFFD/AIFFD.html[some vignettes] for the book `Analysis and Interpretation of Freshwater Fisheries Data' using http://eusebe.github.com/ascii[+ascii+].
- http://learnr.wordpress.com/[This blog] uses http://eusebe.github.com/ascii[+ascii+] and http://srackham.wordpress.com/blogpost1/[blogpost] to generate and publish post.
  - http://blogisticreflections.wordpress.com/[This blog] http://blogisticreflections.wordpress.com/2009/09/20/welcome-to-blogistic-reflections/[too but with another method].
